# main task to configure reverse proxy instances
#   Example:
#     instances:
#       -   inst_name: default
#           entries:
#               - { method: set, stanza: server, entries: [[server-name, default]] }
#               - { method: add, stanza: server, entries: [[server-name, default]] }
#               - { method: delete, stanza: server, entry_id: server-name, value_id: default }
#               - { method: delete_all, stanza: server, entry_id: server-name }
---
- name: Configure reverse proxy instances
  ibm.isam.isam:
    appliance: "{{ inventory_hostname }}"
    adminProxyProtocol: "{{ adminProxyProtocol | default(omit) }}"
    adminProxyHostname: "{{ adminProxyHostname | default(omit) }}"
    adminProxyPort: "{{ adminProxyPort | default(omit) }}"
    adminProxyApplianceShortName: "{{ adminProxyApplianceShortName | default(omit) }}"
    omitAdminProxy: "{{ omitAdminProxy | default(omit) }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ port | default(omit) }}"
    log:       "{{ log_level | default(omit) }}"
    force:     "{{ force | default(omit) }}"
    action: "ibmsecurity.isam.web.reverse_proxy.configuration.entry.{{ item.1.method }}"
    isamapi: "{{ item.1 | exclude('method') | combine({ 'reverseproxy_id': item.0.inst_name }) | include_only(entry_name) }}"
  with_subelements:
    - "{{ instances }}"
    - entries
    - skip_missing: true
  when: "item.0.inst_name == inst_name and item.1.method == method and item.1.stanza_id == stanza_id and ( item.1.entries is defined and ((item.1.entries | include_only(entry_name)) != []) or item.1.entry_id is defined)"
  loop_control:
    label: "( method: [{{ item.1.method }}], inst_name:[{{ item.0.inst_name }}], stanza_id: [{{ item.1.stanza_id }}], entries: [{{ item.1.entries if item.1.entries is defined else 'None'}}], entry_id: [{{ item.1.entry_id if item.1.entry_id is defined else 'None'}}], value_id: [{{ item.1.value_id if item.1.value_id is defined else 'None'}}])"
  notify: Commit Changes