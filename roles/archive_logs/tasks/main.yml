- name: List all the logs from reverse proxy {{ archive_logs_instance_id }}
  ibm.isam.isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.reverse_proxy.logs.get_all
    isamapi:
      instance_id: "{{ archive_logs_instance_id }}"
  when: archive_logs_instance_id is defined
  register: ret_obj

- name: Get date from {{ archive_logs_grace_days }} days ago
  command: "python -c \"import datetime;print (datetime.datetime.now()-datetime.timedelta(days={{ archive_logs_grace_days }})).date()\""
  register: past_dt
  changed_when: False

- name: Export logs from reverse proxy {{ archive_logs_instance_id }}
  ibm.isam.isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.reverse_proxy.logs.export_file
    isamapi:
      instance_id: "{{ archive_logs_instance_id }}"
      file_id: "{{ item['id'] }}"
      filename: "{{ archive_logs_directory }}/{{ inventory_hostname }}_{{ item['id'] }}"
  when:
    - archive_logs_export
    - archive_logs_instance_id is defined
    - item['id'].startswith(archive_logs_filter)
    - item['id'][dt_start|int:dt_end|int] < past_dt.stdout
  with_items: "{{ ret_obj['data'] }}"
  vars:
    dt_start: "{{ archive_logs_filter | length }}"
    dt_end: "{{ dt_start|int + 10 }}"

- name: Delete logs from reverse proxy {{ archive_logs_instance_id }}
  ibm.isam.isam:
    appliance: "{{ inventory_hostname }}"
    username:  "{{ username }}"
    password:  "{{ password }}"
    lmi_port:  "{{ lmi_port }}"
    log:       "{{ log_level }}"
    force:     "{{ force }}"
    action: ibmsecurity.isam.web.reverse_proxy.logs.delete
    isamapi:
      instance_id: "{{ archive_logs_instance_id }}"
      file_id: "{{ item['id'] }}"
  when:
    - archive_logs_delete | bool
    - archive_logs_instance_id is defined
    - item['id'].startswith(archive_logs_filter)
    - item['id'][dt_start|int:dt_end|int] < past_dt.stdout
  with_items: "{{ ret_obj['data'] }}"
  vars:
    dt_start: "{{ archive_logs_filter | length }}"
    dt_end: "{{ dt_start|int + 10 }}"
